axis.text.y = element_text(size = 12),
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
) +
coord_flip()
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 10, height = 5, units = 'in', res = 300)
ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(
fill = "skyblue",
color = "darkblue",
outlier.colour = "red",
outlier.shape = 16,
outlier.size = 2
) +
labs(
title = "RMSE Boxplot",
x = NULL,
y = "RMSE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 12),
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
) +
coord_flip()
ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(
fill = "skyblue",
color = "darkblue",
outlier.colour = "red",
outlier.shape = 16,
outlier.size = 2
) +
labs(
title = "RMSE Boxplot",
x = "NULL",
y = "RMSE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 12),
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
) +
coord_flip()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(
fill = "skyblue",
color = "darkblue",
outlier.colour = "red",
outlier.shape = 16,
outlier.size = 2
) +
labs(
title = "RMSE Boxplot",
x = "NULL",
y = "RMSE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 12),
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
) +
coord_flip()
print(boxplot)
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 10, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(
fill = "skyblue",
color = "darkblue",
outlier.colour = "red",
outlier.shape = 16,
outlier.size = 2
) +
labs(
title = "RMSE Boxplot",
x = "NULL",
y = "RMSE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 12),
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
)
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 10, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "grey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 10))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 10, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 10))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 10, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line() +
geom_point() +
labs(title = "RMSE across Iterations", x = "Iteration", y = "RMSE") +
theme_minimal()
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
rmse
trainEnd
testEnd
dates[dates >= dateStart & dates <= dateEnd]
dateStart <- as.Date("2021-01-01")
dateEnd <- as.Date("2024-01-01")
dates[dates >= dateStart & dates <= dateEnd]
datesQ[datesQ >= dateStart & datesQ <= dateEnd]
trainingDates <- datesQ[datesQ >= dateStart & datesQ <= dateEnd]
rmse <- data.frame(iteration = factor(trainingDates), rmse = rmseValues)
rmseValues
rmseValues
class(rmseValues)
data.frame(iteration = trainingDates, rmse = rmseValues)
trainingDates <- datesQ[datesQ >= dateStart & datesQ < dateEnd]
trainingDates
rmse <- data.frame(iteration = trainingDates, rmse = rmseValues)
rmse
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line() +
geom_point() +
labs(title = "RMSE across Iterations", x = "Iteration", y = "RMSE") +
theme_minimal()
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "Iteration",
y = "RMSE") +
theme_minimal() +                               # Minimal theme
theme(axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y")
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "Iteration",
y = "RMSE") +
theme_minimal() +                               # Minimal theme
theme(axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y", breaks = rmse$iteration)
print(rmseplot)
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "Iteration",
y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 10),
axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y", breaks = rmse$iteration)
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 10))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 5, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 10))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 6, height = 4, units = 'in', res = 300)
print(boxplot)
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates > as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable - history and forecast"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("Historical", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
matchDates
forecastDates
matchDates
cuttoff
forecastDates
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable - history and forecast"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("Historical", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
matchDates
forecastDates
dates
cuttoff
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
yPredicted[forecastDates]
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
historicalDates
forecastDates
matchDates
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)
max(datesQ)
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates > cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff # & dates >= as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
print(dates[historicalDates])
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
print(dates[historicalDates])
forecastDates
dates[forecastDates]
forecastDates <- dates > cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
#points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= cuttoff
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[historicalDates], yPredicted[historicalDates], type = "l", col = "blue",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
#lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
historicalDates
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
lines(dates[forecastDates], yPredicted[forecastDates], col = "red", lwd = 2)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[forecastDates], yPredicted[forecastDates], type = "l", col = "red",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[historicalDates], yPredicted[historicalDates], col = "blue", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
geom_hline(yintercept = 0, linetype = "solid", color = "gray")
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
xlim = range(dates)
plot(dates[forecastDates], yPredicted[forecastDates], type = "l", col = "red",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[historicalDates], yPredicted[historicalDates], col = "blue", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
geom_hline(yintercept = 0, linetype = "solid", color = "gray")
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
xlim = range(dates)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[forecastDates], yPredicted[forecastDates], type = "l", col = "red",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[historicalDates], yPredicted[historicalDates], col = "blue", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
geom_hline(yintercept = 0, linetype = "solid", color = "gray")
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= as.Date("2019-01-01")
matchDates <- which(dates %in% datesQ)
xlim = range(dates)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[forecastDates], yPredicted[forecastDates], type = "l", col = "red",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[historicalDates], yPredicted[historicalDates], col = "blue", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
geom_hline(yintercept = 0, linetype = "solid", color = "gray")
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
cuttoff <- max(datesQ)
historicalDates <- dates <= cuttoff  & dates >= as.Date("2019-01-01")
forecastDates <- dates >= as.Date("2019-01-01")
matchDates <- which(dates %in% datesQ)
png(paste0(WD, "/charts/", "DFM_forecast.png"), width = 10, height = 5, units = 'in', res = 300)
plot(dates[forecastDates], yPredicted[forecastDates], type = "l", col = "red",
xlab = "months", ylab = "growth rates",
main = paste0(ctryTarget, " ", varTarget, ": Monthly target variable (history and forecast)"), lwd = 2)
lines(dates[historicalDates], yPredicted[historicalDates], col = "blue", lwd = 2)
points(dates[matchDates], yPredicted[matchDates], col = "blue", pch = 1)  # Add red circles
geom_hline(yintercept = 0, linetype = "solid", color = "gray")
grid(nx = NULL, ny = NULL, col = "gray", lty = "dotted")
legend(x = "bottomleft",
legend = c("History", "Forecast", "Matched observations"),
col = c("blue", "red", "blue"),pch = c(NA, NA, 1), lwd = c(2, 2, 2), xpd = TRUE, bty = "n")
dev.off()
yPredicted
print(names(dfModel))
# boxplot
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 6, height = 4, units = 'in', res = 300)
print(boxplot)
dev.off()
# lineplot
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "Iteration",
y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y", breaks = rmse$iteration)
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 12, height = 6, units = 'in', res = 300)
print(boxplot)
dev.off()
# lineplot
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "iterations",
y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y", breaks = rmse$iteration)
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
boxplot <- ggplot(rmse, aes(y = rmseValues)) +
geom_boxplot(fill = "lightgrey", color = "darkblue") +
labs(title = "RMSE Boxplot",x = NULL,y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
png(paste0(WD, "/charts/", "RMSE_boxplot.png"), width = 8, height = 5, units = 'in', res = 300)
print(boxplot)
dev.off()
# lineplot
rmseplot <- ggplot(rmse, aes(x = iteration, y = rmse)) +
geom_line(color = "grey") +
geom_point(color = "red", size = 3) +
labs(title = "RMSE across iterations",
x = "iterations",
y = "RMSE") +
theme_light() +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 45,    # Rotate x-axis labels for clarity
hjust = 1)) +
scale_x_date(date_labels = "%b %Y", breaks = rmse$iteration)
png(paste0(WD, "/charts/", "RMSE_evolution.png"), width = 10, height = 5, units = 'in', res = 300)
print(rmseplot)
dev.off()
